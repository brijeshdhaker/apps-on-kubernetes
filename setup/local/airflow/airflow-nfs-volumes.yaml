#
# kubectl -n apache-airflow apply -f setup/local/airflow/airflow-nfs-volumes.yaml
#
# kubectl -n apache-airflow delete -f setup/local/airflow/airflow-nfs-volumes.yaml
#
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: airflow-dags
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4.2
  nfs:
    path: /mnt/nfs_share/airflow/dags
    server: 192.168.122.1
    readOnly: false

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-dags
  labels:
    vol: airflow-dags
spec:
  storageClassName: ""
  volumeName: "airflow-dags"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: airflow-logs
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4.2
  nfs:
    path: /mnt/nfs_share/airflow/logs
    server: 192.168.122.1
    readOnly: false

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-logs
  labels:
    vol: airflow-logs
spec:
  storageClassName: ""
  volumeName: "airflow-logs"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: airflow-templates
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4.2
  nfs:
    path: /mnt/nfs_share/airflow/templates
    server: 192.168.122.1
    readOnly: false

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-templates
  labels:
    vol: airflow-templates
spec:
  storageClassName: ""
  volumeName: "airflow-templates"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---