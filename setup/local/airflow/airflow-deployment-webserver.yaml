#
# kubectl -n apache-airflow apply -f setup/local/airflow/airflow-deployment-webserver.yaml
#
# kubectl -n apache-airflow delete -f setup/local/airflow/airflow-deployment-webserver.yaml
#
# kubectl -n apache-airflow logs airflow-5655f79586-8jbmd -c init
# kubectl -n apache-airflow logs airflow-5655f79586-8jbmd -c airflow-webserver
# kubectl -n apache-airflow logs airflow-5655f79586-8jbmd -c airflow-scheduler
# kubectl -n apache-airflow exec -it airflow-5655f79586-8jbmd -c airflow-webserver -- /bin/bash
#
# kubectl -n apache-airflow exec -it airflow-5655f79586-8jbmd -c airflow-scheduler -- /bin/bash
#
# kubectl -n apache-airflow get pods --show-labels
# kubectl -n apache-airflow delete pods -l kubernetes_executor=True and spark-role=driver
# kubectl -n apache-airflow delete pods -l kubernetes_executor=True -l spark-role=driver
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      serviceAccountName: airflow
      initContainers:
        - name: "init"
          image: apache/airflow:2.5.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: airflow-configmap
              mountPath: /opt/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: airflow-dags
              mountPath: /opt/airflow/dags
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-secrets
                  key: sql_alchemy_conn
          command:
            - "airflow"
          args:
            - "db"
#            - "init"
            - "upgrade"
      containers:
        - name: airflow-webserver
          image: apache/airflow:2.5.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: AIRFLOW_KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: airflow-secrets
                  key: sql_alchemy_conn
            - name: AIRFLOW__CORE__EXECUTOR
              value: KubernetesExecutor
          volumeMounts:
            - name: airflow-configmap
              mountPath: /opt/airflow/airflow.cfg
              subPath: airflow.cfg
            - name: airflow-dags
              mountPath: /opt/airflow/dags
            - name: airflow-logs
              mountPath: /opt/airflow/logs
            - name: airflow-templates
              mountPath: /opt/airflow/templates
          command:
            - airflow
          args:
            - webserver
      restartPolicy: Always
      volumes:
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs
        - name: airflow-templates
          persistentVolumeClaim:
            claimName: airflow-templates
        - name: airflow-configmap
          configMap:
            name: airflow-configmap
        - name: airflow-dags-fake
          emptyDir: { }
        - name: airflow-dags-git
          emptyDir: { }

---

