#
# kubectl apply -f admin/user/brijeshdhaker-rbac-user.yaml
#
# kubectl auth can-i list pods --namespace engineering --as brijesdhaker
#
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: engineering-roles
  namespace: engineering
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["services", "endpoints", "pods", "nodes"]
    verbs: [ "get", "list", "watch", "create", "update", "delete", "patch" ]
  - apiGroups: [ "batch", "extensions" ]
    resources: [ "jobs" ]
    verbs: [ "get", "list", "watch", "create", "update", "delete", "patch" ]
  - apiGroups: [""]
    resources: ["pods/logs"]
    verbs: [ "get", "list", "watch", "create", "update", "delete", "patch" ]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: [ "get", "list", "watch", "create", "update", "delete", "patch" ]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: brijesdhaker-rbac
  namespace: engineering
roleRef:
  kind: Role                              # This must be Role or ClusterRole
  name: engineering-roles                 # This must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: User
    name: brijesdhaker                    # Name of the User
    namespace: engineering